# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: 'Track-It build'

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout to the repository
        uses: actions/checkout@v2
      
      - name: Set up NodeJS environment
        uses: actions/setup-node@v2
        with:
          # Reads the node version from the .nvmrc file itself 
          node-version-file: '.nvmrc'
          # cache: 'npm'
          # cache-dependency-path: package-lock.json
        
      # # Consider this as an add on to optimize the execution of actions
      # - name: Cache node modules
      #   id: cache-npm
      #   uses: actions/cache@v3
      #   env:
      #     cache-name: cache-node-modules
      #   with:
      #     # npm cache files are stored in `~/.npm` on Linux/macOS
      #     path: ~/.npm
      #     key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      #     restore-keys: |
      #       ${{ runner.os }}-build-${{ env.cache-name }}-
      #       ${{ runner.os }}-build-
      #       ${{ runner.os }}-
       
      - name: Install package dependencies
        run: npm install
          
      - name: Check linting and formatting
        # Custom script for checking the linting and formatting being in place
        run: npm run lint
      
      # Run test cases and this could ensure minimum coverage as well if set
      # - name: Execute test cases
      #   run: npm run test
      #   env:
      #     NEXT_PUBLIC_THE_MOVIE_DB_API_KEY: ${{secrets.MOVIE_DB_API_KEY}}
      #     NEXT_PUBLIC_OMDB_API_KEY: ${{secrets.OMDB_API_KEY}}
      #     NEXT_PUBLIC_FF_API_KEY: ${{secrets.FF_API_KEY}}
      #     NEXT_PUBLIC_FIREBASE_API_KEY: ${{secrets.FIREBASE_API_KEY}}
      #     NEXT_PUBLIC_FIREBASE_APP_ID: ${{secrets.FIREBASE_APP_ID}}
      #     NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{secrets.FIREBASE_AUTH_DOMAIN}}
      #     NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{secrets.FIREBASE_MESSAGING_SENDER_ID}}
      #     NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{secrets.FIREBASE_PROJECT_ID}}
      #     NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{secrets.FIREBASE_STORAGE_BUCKET}}
      #     NEXT_PUBLIC_THE_MOVIE_DB_BASE_URL: ${{secrets.HE_MOVIE_DB_BASE_URL}}
        
      - name: Create test build
        run: npm run build
        env:
          NEXT_PUBLIC_THE_MOVIE_DB_API_KEY: ${{secrets.MOVIE_DB_API_KEY}}
          NEXT_PUBLIC_OMDB_API_KEY: ${{secrets.OMDB_API_KEY}}
          NEXT_PUBLIC_FF_API_KEY: ${{secrets.FF_API_KEY}}
          NEXT_PUBLIC_FIREBASE_API_KEY: ${{secrets.FIREBASE_API_KEY}}
          NEXT_PUBLIC_FIREBASE_APP_ID: ${{secrets.FIREBASE_APP_ID}}
          NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{secrets.FIREBASE_AUTH_DOMAIN}}
          NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{secrets.FIREBASE_MESSAGING_SENDER_ID}}
          NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{secrets.FIREBASE_PROJECT_ID}}
          NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{secrets.FIREBASE_STORAGE_BUCKET}}
          NEXT_PUBLIC_THE_MOVIE_DB_BASE_URL: ${{secrets.HE_MOVIE_DB_BASE_URL}}



